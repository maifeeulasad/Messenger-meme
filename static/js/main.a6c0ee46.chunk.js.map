{"version":3,"sources":["interface/IMessageType.ts","component/Messages.tsx","component/Messenger.tsx","component/Wrapper.tsx","index.tsx"],"names":["IMessageType","Messages","className","this","props","messageType","Received","messages","map","message","React","Component","Messenger","src","displayImage","alt","displayName","time","isRemoved","type","placeholder","Wrapper","state","temMessage","temMessages","isBulk","displayPicture","setState","onDisplayPictureChange","e","target","value","onMessageChange","onDisplayNameChange","onBulkChange","checked","bulkAdd","clearBulk","onChange","onClick","Sent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c0ee46.chunk.js","sourcesContent":["export enum IMessageType{\r\n    Sent = 0,\r\n    Received = 1,\r\n}\r\n","import React from 'react';\r\nimport IMessagesProps from \"../interface/IMessagesProps\";\r\nimport {IMessageType} from \"../interface/IMessageType\";\r\n\r\nclass Messages extends React.Component<IMessagesProps> {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className={this.props.messageType ===IMessageType.Received ? \"messages messages--received\" : \"messages messages--sent\"}>\r\n                {\r\n                    this.props.messages.map((message) =>{\r\n                        return(<div className=\"message\">{message}</div>)\r\n                    })\r\n                }\r\n            </div>);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Messages;\r\n","import React from 'react';\r\nimport Messages from \"./Messages\";\r\nimport IMessengerProps from \"../interface/IMessengerProps\";\r\n\r\nclass Messenger extends React.Component<IMessengerProps> {\r\n\r\n    render() {\r\n        return (<div>\r\n\r\n\r\n            <div className=\"screen\">\r\n                <div className=\"text-bar\">\r\n                    <form className=\"text-bar__field\">\r\n                        <div className={\"header header-img\"}>\r\n                            <img src={this.props.displayImage} alt={\"DP\"}/>\r\n                            <div className={\"active\"}/>\r\n                        </div>\r\n                        <div className={\"header-details\"}>\r\n                            <div>\r\n                                {this.props.displayName}\r\n                            </div>\r\n                            <div>\r\n                                Active now\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"conversation\">\r\n                    {\r\n                        this.props.messages.map((message) => {\r\n                            return (<Messages messages={message.messages} messageType={message.messageType}\r\n                                              time={message.time} isRemoved={message.isRemoved}/>)\r\n                        })\r\n                    }\r\n                </div>\r\n                <div className=\"text-bar\">\r\n                    <form className=\"text-bar__field\">\r\n                        <input type=\"text\" placeholder=\"Type a message\"/>\r\n                    </form>\r\n                    <div className=\"text-bar__thumb\">\r\n                        <div className=\"thumb\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>);\r\n    }\r\n\r\n}\r\n\r\nexport default Messenger;\r\n","import React, {ChangeEvent} from 'react';\r\nimport Messenger from \"./Messenger\";\r\nimport {IMessageType} from \"../interface/IMessageType\";\r\nimport IWrapperState from \"../interface/IWrapperState\";\r\nimport IWrapperProps from \"../interface/IWrapperProps\";\r\n\r\nclass Wrapper extends React.Component<IWrapperProps, IWrapperState> {\r\n\r\n    state = {\r\n        temMessage: '',\r\n        messages: [],\r\n        temMessages: [],\r\n        isBulk: true,\r\n        displayPicture: \"https://avatars3.githubusercontent.com/u/29339330?s=460&u=adb4c9845d1c063c9d71843bc0d56cebf7f46e5b&v=4\",\r\n        displayName : 'Name'\r\n    };\r\n\r\n    message = (type: IMessageType) => {\r\n        this.setState({\r\n            messages: [...this.state.messages, {\r\n                messages: this.state.isBulk ? this.state.temMessages : this.state.temMessage === '' ? [] : [this.state.temMessage],\r\n                messageType: type\r\n            }]\r\n        })\r\n    };\r\n\r\n    onDisplayPictureChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if(e.target.value!=='')\r\n            this.setState({displayPicture: e.target.value});\r\n        else\r\n            this.setState({displayPicture:\"https://avatars3.githubusercontent.com/u/29339330?s=460&u=adb4c9845d1c063c9d71843bc0d56cebf7f46e5b&v=4\"});\r\n    };\r\n\r\n    onMessageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({temMessage: e.target.value})\r\n    };\r\n\r\n    onDisplayNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({displayName: e.target.value})\r\n    };\r\n\r\n    onBulkChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({isBulk: e.target.checked});\r\n    };\r\n\r\n    bulkAdd = () => {\r\n        if (this.state.isBulk && this.state.temMessage)\r\n            this.setState({temMessages: [...this.state.temMessages, this.state.temMessage]})\r\n    };\r\n\r\n    clearBulk = () => {\r\n        this.setState({temMessages: []});\r\n    };\r\n\r\n    render() {\r\n        return (<div className={\"side\"}>\r\n            <div className={\"side-left\"}>\r\n                <div>\r\n                <input\r\n                    placeholder={\"Message\"}\r\n                    onChange={(e) => {\r\n                        this.onMessageChange(e)\r\n                    }}/>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        placeholder={\"Display Picture URL\"}\r\n                        onChange={(e) => {\r\n                            this.onDisplayPictureChange(e)\r\n                        }}/>\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        placeholder={\"Display Name\"}\r\n                        onChange={(e) => {\r\n                            this.onDisplayNameChange(e)\r\n                        }}/>\r\n                </div>\r\n                <button onClick={() => {\r\n                    this.message(IMessageType.Sent)\r\n                }}>Send\r\n                </button>\r\n                <button onClick={() => {\r\n                    this.message(IMessageType.Received)\r\n                }}>Receive\r\n                </button>\r\n                <label>Is Bulk</label>\r\n                <input checked={this.state.isBulk} onChange={(e) => this.onBulkChange(e)} type={\"checkbox\"}/>\r\n                {\r\n                    this.state.isBulk && <div>\r\n                        <button onClick={() => {\r\n                            this.clearBulk()\r\n                        }}>Clear Bulk\r\n                        </button>\r\n                        <button onClick={() => {\r\n                            this.bulkAdd()\r\n                        }}>Bulk Add\r\n                        </button>\r\n                        {this.state.temMessages.map((message) => {\r\n                            return (<li>{message}</li>)\r\n                        })}\r\n                    </div>\r\n                }\r\n            </div>\r\n            <div className={\"side-right\"}>\r\n                <Messenger\r\n                    displayName={this.state.displayName}\r\n                    displayImage={this.state.displayPicture}\r\n                    messages={this.state.messages}/>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport Wrapper from \"./component/Wrapper\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Wrapper/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}